<!DOCTYPE html>
<html>

<head>
    <title>
        <%= username %>
    </title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #1d1b34;
            margin: 0;
            padding: 0;
        }

        .profile-container {
            background-color: #fff;
            border-radius: 10px;
            width: 300px;
            margin: 20px auto;
            text-align: center;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            padding: 20px;
        }

        .profile-photo {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            background-color: #ccc;
            margin: 20px auto;
            border: 5px solid #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }

        .username {
            font-size: 24px;
            font-weight: bold;
            color: #007bff;
        }

        .bio {
            margin-top: 10px;
            color: #444;
        }

        .email {
            margin-top: 10px;
            color: #888;
        }

        .add-friend-button {
            background-color: #07a607;
            color: #fff;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 20px;
            font-weight: bold;
        }

        .add-friend-button:hover {
            background-color: #059a05;
        }

        .friends-list {
            margin-top: 20px;
            text-align: left;
        }

        .friends-list li {
            list-style: none;
            margin-bottom: 5px;
        }
        #repo-container {
            display: flex;
            justify-content: space-between;
            margin-top: 30px;
            border-radius: 20px;
            background-color: #007bff;
            height: 400px;
            color: wheat;
            margin-bottom: 20px;
        }

        .repository {
            margin: auto;
            width: 15%;
            height: 200px;
            background-color: #1d1b34;
            border-radius: 20px;
            box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.6);
            cursor: pointer;
        }

        .flex {
            display: flex;
            flex-direction: row;
        }
    </style>
</head>

<body>
    <div class="profile-container">
        <div class="profile-photo"></div>
        <div class="username">
            <%= username %>
        </div>
        <div class="bio"></div>
        <div class="email">Email: </div>
        <button class="add-friend-button" onclick="addFriend()">Add Friend</button>
        <h2>Friends List:</h2>
        <div class="friends-list">

        </div>
    </div>
    <div id="repo-container"></div>
</body>
<script>
    const userId = "<%= username %>"
    function addFriend() {
        // To retrieve the username
        const userId = localStorage.getItem("username");
        console.log(userId)

        const friendId = "<%= username %>"
        const data = {
            userId: userId,
            friendId: friendId,
        };

        fetch("/addFriend", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
        })
            .then((response) => response.json())
            .then((data) => {
                console.log(data);
                if (data.status === "success") {
                    alert("Friend added successfully!");
                } else {
                    alert("Failed to add friend: " + data.message);
                }
            })
            .catch((error) => {
                console.error("Error adding friend:", error);
                alert("An error occurred while adding friend. Please try again later.");
            });
    }
    function loadRepositories() {
        if (!userId) {
            alert("fuck off")
        }
        fetch("/loadRepository", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ userId }),
        })
            .then((response) => {
                if (!response.ok) {
                    throw new Error("Network response was not ok");
                }
                return response.json();
            })
            .then((data) => {
                if (data.status === "success") {
                    const repositories = data.repositories;

                    if (repositories.length > 0) {
                        const repoContainer = document.getElementById("repo-container");
                        repoContainer.innerHTML = "";

                        repositories.forEach((repo) => {
                            const repoElement = document.createElement("div");
                            repoElement.className = "repository";
                            repoElement.onclick = () => openRepository(repo.name);
                            repoElement.innerHTML = `<h3>${repo.name}</h3><p>Created on: ${repo.createdAt}</p>`;
                            repoContainer.appendChild(repoElement);
                        });
                    }
                } else {
                    alert("Failed to load repositories: " + data.message);
                }
            })
            .catch((error) => {
                console.error("Error loading repositories", error);
                alert("An error occurred while loading the repositories. Please try again later.");
            });
    }

    function openRepository(name) {
        window.location.href = "/" + name;
    }

    loadRepositories();
    </script>

</html>