<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/frontend/user.css">
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <title>BitBliss</title>
    <style>
        #notifications {
            background-color: aliceblue;
            color: black;
            width: 25px;
            height: 25px;
            cursor: pointer;
            margin-top: 15px;
            border-radius: 50%;
        }

        .backdrop {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.6);
        }

        .blurred-div {
            padding: 2%;
            position: absolute;
            display: flex;
            top: 40px;
            flex-direction: column;
            left: 81%;
            transform: translateX(-50%);
            border: solid 1px rgb(92, 92, 92);
            border-radius: 10px;
            width: 400px;
            height: 600px;
            background-color: rgba(48, 48, 48);
        }

        #acceptBtn {
            background-color: #5cb85c;
            color: #fff;
            height: 40px;
            margin-left: 10px;
        }

        #rejectBtn {
            background-color: #d9534f;
            color: #fff;
            margin-left: 10px;
            height: 40px;
        }

        #mainTitle {
            color: white;
        }

        #notificationContainer {
            color: white;
            display: flex;
            justify-content: space-between;
        }

        #chatlist {
            width: 20%;
            display: flex;
            flex-direction: column;
        }

        #switchchat {
            margin-left: 10px;
            width: 100%;
            display: flex;
            justify-content: space-between;
        }

        .createRoomButton {
            padding: 5px;
            height: 35px;
            width: 100%;
            margin-bottom: 5px;
            background-color: #1d1b1b;
            border-radius: 5px;
        }

        .createRoom {
            padding: 2%;
            position: absolute;
            display: flex;
            justify-content: space-between;
            top: 50px;
            flex-direction: column;
            left: 50%;
            transform: translateX(-50%);
            border: solid 1px rgb(92, 92, 92);
            border-radius: 10px;
            width: 500px;
            height: 300px;
            background-color: rgba(48, 48, 48);
        }

        #buttonwidth {
            width: 47%;
        }

        #buttonwidth1 {
            width: 47%;
        }
    </style>
</head>

<body>
    <div class="header">
        <a href="/"><img src="/assets/logo2.jpg"></a>
        <button class="profile-button" onclick="profile()">Profile</button>
        <input type="text" class="explore-bar" id="explore" placeholder="Explore..." />
        <button onclick="explore()">explore</button>
        <div>
            <div id="notifications" onclick="notifications()"><span class="material-symbols-outlined">
                    circle_notifications
                </span></div>
        </div>

    </div>
    <div>
        <div class="section">
            <div class="chat-container flex">
                <div id="chatlist">
                    <div id="switchchat">
                        <button onclick="loadFriends()" id="buttonwidth">Friends</button>
                        <button onclick="loadRooms()" id="buttonwidth">Rooms</button>
                    </div>
                    <div id="friends-list"></div>
                </div>

                <div class="chat-window" id="chat-window">
                    <label style="margin: auto;">Select people to message</label>
                </div>
            </div>


            <div>
                <div class="section repo">
                    <h2>Repository</h2>
                    <button onclick="createRepository()">create new Repository</button>
                    <div id="repo-container"></div>
                </div>
                <h1>Cosmic Arcade</h1>
                <div class="section repo">
                    <div class="game-card">
                        <h3>tictactoe</h3>
                        <a onclick="game('tictactoe')" class="cta-button">Play Now</a>
                    </div>
                    <div class="game-card">
                        <h3>cosmicshoot</h3>
                        <a onclick="game('cosmicshoot')" class="cta-button">Play Now</a>
                    </div>
                    <div class="game-card">
                        <h3>chess</h3>
                        <a onclick="game('chess')" class="cta-button">Play Now</a>
                    </div>
                    <div class="game-card">
                        <h3>truck</h3>
                        <a onclick="game('truck')" class="cta-button">Play Now</a>
                    </div>
                    <div class="game-card">
                        <h3>Rock-Paper-Scissors</h3>
                        <a onclick="game('Rock-Paper-Scissors')" class="cta-button">Play Now</a>
                    </div>
                    <div class="game-card">
                        <h3>paint</h3>
                        <a onclick="game('paint')" class="cta-button">Play Now</a>
                    </div>
                </div>
            </div>
        </div>

    </div>
</body>





<!-- home.js -->
<script src="/socket.io/socket.io.js"></script>
<script>

    const userId = "<%= username %>";
    const socket = io();

    socket.emit("connection");
    socket.emit("authenticate", { userID: userId });

</script>
<script src="./../frontend/scripts/notification.js"></script>
<script src="./../frontend/scripts/chats.js"></script>
<script src="./../frontend/scripts/room.js"></script>

<script>

    function createRepository() {
        window.location.href = "/<%= username %>/new-Repository";
    }

    function profile() {
        window.location = "/<%= username %>"
    }

    const explores = document.getElementById("explore")
    function explore() {
        window.location.href = "/Explore/" + explores.value
    }

    explores.addEventListener('keypress', function (event) {
        if (event.key === 'Enter') {
            explore()
        }
    });

</script>

<!-- repository section -->
<script>

    function loadRepositories() {
        fetch("/loadRepository", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ userId }),
        })
            .then((response) => {
                if (!response.ok) {
                    throw new Error("Network response was not ok");
                }
                return response.json();
            })
            .then((data) => {
                if (data.status === "success") {
                    const repositories = data.repositories;

                    if (repositories.length > 0) {
                        const repoContainer = document.getElementById("repo-container");
                        repoContainer.innerHTML = "";

                        repositories.forEach((repo) => {
                            const repoElement = document.createElement("div");
                            repoElement.className = "repository";
                            repoElement.onclick = () => openRepository(repo.name);
                            repoElement.innerHTML = `<h3>${repo.name}</h3><p>Created on: ${repo.createdAt}</p>`;
                            repoContainer.appendChild(repoElement);
                        });
                    }
                } else {
                    alert("Failed to load repositories: " + data.message);
                }
            })
            .catch((error) => {
                console.error("Error loading repositories", error);
                alert("An error occurred while loading the repositories. Please try again later.");
            });
    }

    function openRepository(name) {
        window.location.href = "/" + userId + "/" + name;
    }

    loadRepositories();
</script>



<!-- Games Section -->
<script>
    function game(game) {
        if (game == 'tictactoe') {
            window.location.href = "/TicTacToe";
        } else if (game == 'cosmicshoot') {
            window.location.href = "/cosmicshoot'";
        } else if (game == 'chess') {
            window.location.href = "/chess";
        } else if (game == 'truck') {
            window.location.href = "/truck";
        } else if (game == 'paint') {
            window.location.href = "/paint";
        } else if (game == 'Rock-Paper-Scissors') {
            window.location.href = "/Rock-Paper-Scissors";
        }
    }
</script>

</html>