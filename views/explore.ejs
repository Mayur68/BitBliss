<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>
        <%= promt %>
    </title>
    <style>
        /* General Styling */
        body {
            background-color: #1d1b34;
            font-family: Arial, sans-serif;
            margin: 0;
        }

        header {
            background-color: #1d1b34;
            color: #fff;
            text-align: center;
            padding: 20px;
        }

        /* Explore Bar Styling */
        .explore-bar {
            width: 70%;
            padding: 10px;
            border-radius: 5px;
            border: none;
            margin-right: 10px;
        }

        /* Explore Button Styling */
        button {
            background-color: #07a607;
            color: #fff;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            margin-bottom: 10px;
            border-radius: 5px;
            font-weight: bold;
        }

        /* Main Content Styling */
        main {
            display: flex;
            justify-content: space-between;
            margin: 20px;
        }

        /* Filter Section Styling */
        #filter {
            display: flex;
            flex-direction: column;
            align-items: center;
            color: white;
        }

        label {
            font-size: 20px;
            margin-right: 10px;
        }

        /* Results Section Styling */
        #results {
            width: 70%;
            padding: 20px;
            border: 1px solid #474747;
            border-radius: 20px;
            background-color: #26253e;
            color: white;
            text-align: center;
            overflow-y: auto;
        }

        /* Title Styling */
        #title {
            font-size: 28px;
            margin-bottom: 20px;
            color: #07a607;
        }

        /* Individual Repository/User Styling */
        .repo-container,
        .user-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: space-between;
            padding: 10px;
            border: 1px solid #474747;
            border-radius: 6px;
            margin-bottom: 10px;
            background-color: #35344f;
        }

        /* User Profile Photo Styling */
        .user-profilePhoto {
            width: 50px;
            height: 50px;
            margin-right: 10px;
            border-radius: 50%;
            overflow: hidden;
        }

        .user-profilePhoto img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        /* User Name Styling */
        .user-name {
            font-weight: bold;
            font-size: 16px;
            color: #07a607;
        }

        /* Responsive Styling for Mobile Devices */
        @media only screen and (max-width: 768px) {
            main {
                flex-direction: column;
                align-items: center;
            }

            #filter {
                margin-top: 20px;
            }

            #results {
                width: 90%;
                margin-top: 20px;
                margin-bottom: 20px;
            }
        }
    </style>
</head>

<body>
    <header>
        <input type="text" class="explore-bar" id="explore" placeholder="explore..." value="<%= promt %>">
        <button onclick="explore()">Explore</button>
    </header>

    <main>
        <section id="filter">
            <label>Filter</label>
            <button onclick="repositories()">Repositories</button>
            <button onclick="users()">Users</button>
        </section>
        <section id="results">
            <label id="title"></label>
            <div id="result" style="color: white; text-align: center;"></div>
        </section>
    </main>
</body>

<script>

    function explore() {
        window.location.href = "/Explore/" + document.getElementById('explore').value;
    }

    // users

    function users() {
        const resultsSection = document.getElementById("result");
        const title = document.getElementById("title");
        resultsSection.innerHTML = "";
        title.innerText = "Users";

        const prompt = "<%= promt %>";
        const data = { user: prompt };

        fetch("/getUsers", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
        })
            .then((response) => response.json())
            .then((data) => {
                if (data.status === "success") {
                    if (data.relatedUsers.length > 0) {
                        resultsSection.innerHTML = "";
                        data.relatedUsers.forEach((user) => {
                            displayUsers(user)
                        });
                    } else {
                        resultsSection.innerHTML = "No related users found.";
                    }
                }
            })
            .catch((error) => {
                console.error("Error loading users", error);
                alert("An error occurred while loading users. Please try again later.");
            });
    }

    async function displayUsers(user) {
        const resultsSection = document.getElementById("result");
        try {
            let username = user;
            const response = await fetch('/loadData', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ username }),
            });

            if (!response.ok) {
                throw new Error('Failed to fetch profile data');
            }

            const userData = await response.json();

            const userElement = document.createElement("div");
            userElement.className = "user-item";

            const profileImage = document.createElement("div");
            profileImage.className = "user-profilePhoto";

            const profileImage1 = document.createElement("img");
            profileImage1.src = userData.user.profilePhoto || "../assets/default-profile.jpg";
            profileImage1.alt = "Profile Photo";
            profileImage.appendChild(profileImage1);

            userElement.appendChild(profileImage);

            const userName = document.createElement("div");
            userName.className = "user-name";
            userName.style.paddingTop = "10px";
            userName.style.marginLeft = "0";
            userName.innerText = userData.user.username || '';

            userElement.appendChild(userName);
            userElement.onclick = () => openProfile(username);

            resultsSection.appendChild(userElement);

        } catch (error) {
            console.error('Error:', error);
            const errorElement = document.createElement('div');
            errorElement.innerText = 'Failed to display user';
            return errorElement;
        }
    }



    
    // public repositoriea

    function repositories() {
        const resultsSection = document.getElementById("result");
        const title = document.getElementById("title");
        resultsSection.innerHTML = "";
        title.innerText = "repositories"
        const prompt = "<%= promt %>";

        const data = {
            topics: prompt,
        };

        fetch("/exploreRepository", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
        })
            .then((response) => response.json())
            .then((data) => {
                if (data.status === "success") {
                    displayRepositories(data.repositories);
                }
            })
            .catch((error) => {
                console.error("Error loading repositories", error);
                alert("An error occurred while loading repositories. Please try again later.");
            });

        function displayRepositories(repositories) {
            const resultsSection = document.getElementById("result");
            const title = document.getElementById("title");
            resultsSection.innerHTML = "";
            title.innerText = "Repositories"

            if (repositories.length > 0) {
                repositories.forEach((repo) => {
                    const repoElement = document.createElement("div");
                    repoElement.className = "repo-container";
                    repoElement.onclick = () => openRepository(repo);
                    repoElement.innerHTML = `<h3> ${repo.name}</h3><p>Created by: ${repo.owner}</p>`;
                    resultsSection.appendChild(repoElement);
                });
            } else {
                resultsSection.innerHTML = "No related repositories found.";
            }
        }
    }
    repositories()

    function openRepository(repo) {
        window.location.href = `/${repo.owner.username}/${repo.name}`;
    }

    function openProfile(username) {
        window.location.href = `/${username}`;
    }

</script>


</html>