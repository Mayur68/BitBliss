<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= repository %>
    </title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #1d1b34;
            margin: 0;
            padding: 0;
        }

        a {
            width: 50px;
            height: 50px;
            border-radius: 30px;
        }

        img {
            max-width: 100%;
            height: auto;
            border-radius: 30px;
        }

        h1 {
            color: white;
        }

        .header {
            display: flex;
            justify-content: space-between;
            background-color: #1d1b34;
            color: #fff;
            padding: 20px;
            text-align: center;
        }

        .profile-button {
            background-color: transparent;
            border: none;
            color: #fff;
            font-size: 18px;
            margin-right: 10px;
            cursor: pointer;
        }

        header h1 {
            font-size: 36px;
        }

        main {
            display: flex;
            justify-content: space-between;
        }

        #file {
            background-color: #fff;
            margin: 20px;
            padding: 20px;
            width: 65%;
            height: fit-content;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }

        #view-file {
            background-color: #1d1b34;
            color: white;
            border-radius: 10px;
        }

        #fileTree {
            border-radius: 10px;
            background-color: gray;
        }

        h2 {
            color: #07a607;
            font-size: 24px;
            margin-bottom: 10px;
        }

        p {
            font-size: 18px;
            margin-bottom: 10px;
        }

        #info {
            background-color: #fff;
            margin: 20px;
            padding: 20px;
            width: 30%;
            max-height: 500px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }

        #repo-container {
            display: flex;
            justify-content: space-between;
            margin-top: 30px;
            border-radius: 20px;
            margin-bottom: 20px;
        }

        button {
            background-color: #07a607;
            color: #fff;
            padding: 10px 20px;
            border: none;
            cursor: pointer;
            border-radius: 5px;
            margin-top: 20px;
            font-weight: bold;
        }
    </style>
</head>

<body>
    <div class="header">
        <a href="/"><img src="/assets/logo2.jpg"></a>
        <button class="profile-button" onclick="profile()">Profile</button>
    </div>
    <main>
        <section id="file">
            <div id="fileTree"></div>
            <button>Copy</button>
                <button>Edit</button>
                <button>Save</button>
            <div id="view-file"></div>
        </section>
        <section id="info">
            <h2>Repository Details</h2>
            <div id="details"></div>
            <div>
                <h2>Actions</h2>
                <button onclick="settings()">settings</button>
                <button>contributers</button>
                <button>share</button>
            </div>
        </section>
    </main>

</body>
<script>
    function profile() {
        window.location = "/<%= username %>"
    }
</script>


<script>
    function loadRepository() {
        const username = "<%= username %>";
        const repository = "<%= repository %>";

        fetch(`/getRepository?userId=${username}&repository=${repository}`, {
            method: "GET",
            headers: {
                "Content-Type": "application/json",
            },
        })
            .then((response) => {
                if (!response.ok) {
                    throw new Error("Network response was not ok");
                }
                return response.json();
            })
            .then((data) => {
                if (data.status === "success") {
                    const repository = data.repository;
                    const fileContent = data.fileContent;

                    const repoContainer = document.getElementById("view-file");
                    const repoDetails = document.getElementById("details");
                    repoContainer.innerHTML = "";

                    const repoElement = document.createElement("div");
                    repoElement.className = "repository";
                    repoDetails.innerHTML = `<h3>${repository.name}</h3><p>Description: ${repository.description || ' '}</p>
                    <p>Topics: ${repository.topics || ' '}</p> <p>Contributers: ${repository.contributers || ' '} </p>`;
                    repoContainer.appendChild(repoElement);

                    const fileContentElement = document.createElement("div");
                    fileContentElement.innerHTML = `<h3>${repository.name}</h3><pre>${fileContent}</pre>`;
                    repoContainer.appendChild(fileContentElement);
                } else {
                    alert("Failed to load repository: " + data.message);
                }
            })
            .catch((error) => {
                console.error("Error loading repository", error);
                alert("An error occurred while loading the repository. Please try again later.");
            });
    }

    loadRepository();
</script>

</html>