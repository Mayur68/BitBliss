<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Profile: <%= roomName %>
    </title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #8F66AE;
        }

        .profile-container {
            width: 100%;
            text-align: center;
            padding: 30px;
            color: #fff;
        }

        .username {
            text-align: center;
            padding: 4%;
            top: 50px;
            font-size: 28px;
            font-weight: bold;
            text-transform: uppercase;
        }

        form {
            left: 10px;
            width: 500px;
        }

        .field {
            display: flex;
            margin: 20px 0;
        }

        .field label {
            padding: 3%;
            font-weight: bold;
            color: #fff;
            display: block;
            margin-bottom: 5px;
        }

        .field input,
        .field textarea {
            width: 200px;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background: rgba(255, 255, 255, 0.9);
            margin-top: 5px;
            box-sizing: border-box;
        }

        .field input[type="file"] {
            background: none;
            border: none;
        }

        button {
            background: #5a5a5a;
            color: #fff;
            padding: 12px 20px;
            border: none;
            cursor: pointer;
            border-radius: 5px;
            font-weight: bold;
            transition: background 0.3s, transform 0.3s;
        }

        .save-button {
            background: #5a5a5a;
            color: #fff;
            padding: 12px 20px;
            border: none;
            cursor: pointer;
            border-radius: 5px;
            font-weight: bold;
            transition: background 0.3s, transform 0.3s;
        }

        .save-button:hover {
            background: #444;
            transform: scale(1.05);
        }

        .profile-photo {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            background-color: #ccc;
            left: 10px;
            border: 5px solid #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

        .profile-photo img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        ._1 {
            display: flex;
        }

        .member-profile-photo {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background-color: #ccc;
            border: 2px solid #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }

        .member-profile-photo img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .member-item {
            width: 250px;
            display: flex;
            justify-content: space-between;
        }

        .remove-button {
            background-color: rgb(234, 63, 63);
        }
    </style>


</head>

<body>
    <div class="profile-container">
        <section class="_1">
            <div class="profile-photo">
                <img id="profile-image" src="" alt="Profile Photo">
            </div>
            <div class="username">
                <%= roomName %>
            </div>
        </section>

        <form enctype="multipart/form-data">
            <div class="field">
                <label for="firstName">Room Name</label>
                <input type="text" id="roomName" name="firstName">
            </div>
            <div class="field">
                <label for="firstName">Room owner</label>
                <input type="text" id="roomOwner" name="firstName" readonly>
            </div>
            <div class="field">
                <label for="Description">Description</label>
                <input type="text" id="Description" name="Description">
            </div>
            <div class="field" id="members"></div>
            <button type="button" onclick="addMember()">Add members</button>
            <div class="field" id="members_"></div>
            <div class="field">
                <label for="profile-photo">Profile Photo:</label>
                <input type="file" id="profile-photo" name="profilePhoto">
            </div>
            <button class="save-button" type="button" onclick="save()">Save</button>
        </form>
    </div>

    <script>
        const owner = "<%= username %>";
        const roomName = "<%= roomName %>";

        async function loadData() {

            try {
                const response = await fetch('/loadRoomData', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ roomName }),
                });

                if (!response.ok) {
                    throw new Error('Failed to fetch');
                }

                const data = await response.json();

                if (data.status === 'success') {
                    document.getElementById('roomName').value = data.room.name || '';
                    document.getElementById('roomOwner').value = data.room.owner.username || '';
                    document.getElementById('Description').value = data.room.description || '';

                    const membersElement = document.getElementById('members');
                    membersElement.innerHTML = '';

                    for (const member of data.room.members) {
                        try {
                            const memberResponse = await fetch('/loadData', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ username: member.username }),
                            });

                            const memberData = await memberResponse.json();
                            if (memberData.status === 'success' && memberData.user) {
                                createMemberElement(memberData.user, membersElement);
                            } else {
                                throw new Error('Failed to load profile data for ' + member.username);
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            alert('Failed to load profile data for ' + member.username);
                        }
                    }

                    const profileImage = document.getElementById('profile-image');
                    if (data.room.roomProfilePhoto) {
                        profileImage.src = data.room.roomProfilePhoto;
                        profileImage.alt = "Profile Photo";
                    } else {
                        profileImage.src = "../assets/default-profile.jpg";
                    }
                } else {
                    throw new Error('Failed to load room data');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to load room data');
            }
        }


        function createMemberElement(user) {
            const membersListDiv = document.getElementById("members");
            const memberElement = document.createElement("div");
            memberElement.className = "member-item";

            const profileImage = document.createElement("div");
            profileImage.className = "member-profile-photo";
            const profileImageElement = document.createElement("img");

            if (user.profilePhoto) {
                profileImageElement.src = user.profilePhoto;
                profileImageElement.alt = "Profile Photo";
                profileImage.appendChild(profileImageElement);
            } else {
                profileImageElement.src = "../assets/default-profile.jpg";
                profileImageElement.alt = "Profile Photo";
                profileImage.appendChild(profileImageElement);
            }
            memberElement.appendChild(profileImage);

            const memberName = document.createElement("div");
            memberName.className = "member-name";
            memberName.style.paddingTop = "10px";
            memberName.style.marginLeft = "0";
            memberName.innerText = user.username;
            memberName.onclick = () => window.location = "/" + user.username;
            memberElement.appendChild(memberName);

            const removeButton = document.createElement("button");
            removeButton.type = "button";
            removeButton.className = "remove-button";
            removeButton.innerText = "Remove Member";
            removeButton.onclick = () => removeMember(user.username);
            memberElement.appendChild(removeButton);

            membersListDiv.appendChild(memberElement);
        }



        loadData();

        function addMember() {
    const membersElement = document.getElementById('members_');

    const existingMemberElement = document.getElementById('membres');
    
    if (existingMemberElement) {
        membersElement.removeChild(existingMemberElement);
    }

    const memberElement = document.createElement('input');
    memberElement.type = "text";
    memberElement.placeholder = "members(comma-separated)";
    memberElement.id = `membres`;
    membersElement.appendChild(memberElement);
}



        function removeMember(memberName) {

            const data = {
                roomName: roomName,
                owner: owner,
                member: memberName,
            };

            fetch('/removeMembers', {
                method: 'POST',
                credentials: 'same-origin',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
                .then(response => {
                    if (response.ok) {
                        loadData();
                    } else {
                        return response.json().then(errorData => {
                            console.error('Error:', errorData.message);
                        });
                    }
                })
                .catch(error => {
                    console.error('Fetch Error:', error);
                    alert("error")
                });
        }



        function save() {
            const roomName = document.getElementById('roomName').value;
            const description = document.getElementById('Description').value;
            const membresInput = document.getElementById('membres');
            const members = membresInput ? membresInput.value.split(",").map(member => member.trim()) : [];

            if (membresInput && membresInput.value) {
                const members = membresInput.value.split(",").map(member => member.trim());
            } else {
                const members = [];
            }
            const profilePhoto = document.getElementById('profile-photo').files[0];

            if (!roomName || !description ) {
                alert('Please fill in all required fields');
                return;
            }

            const formData = new FormData();

            formData.append("roomName", roomName);
            formData.append("Description", description);

            members.forEach(member => {
                formData.append("members[]", member);
            });

            if (profilePhoto) {
                formData.append("profilePhoto", profilePhoto);
            }

            fetch('/updateRoom', {
                method: 'POST',
                body: formData,
            })
                .then(response => {
                    if (response.ok) {
                        window.location.href = "/";
                    } else {
                        alert('Room update failed. Please try again.'); // Improved error message
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred. Please try again later.'); // General error alert
                });
        }




    </script>
</body>

</html>